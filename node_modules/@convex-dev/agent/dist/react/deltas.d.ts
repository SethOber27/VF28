import type { MessageDoc } from "../client/index.js";
import type { StreamDelta, StreamMessage, TextStreamPart } from "../validators.js";
import type { UIMessage } from "./toUIMessages.js";
import { toUIMessages } from "./toUIMessages.js";
export { toUIMessages, type UIMessage };
export declare function mergeDeltas(threadId: string, streamMessages: StreamMessage[], existingStreams: Array<{
    streamId: string;
    cursor: number;
    messages: MessageDoc[];
}>, allDeltas: StreamDelta[]): [
    MessageDoc[],
    Array<{
        streamId: string;
        cursor: number;
        messages: MessageDoc[];
    }>,
    boolean
];
export declare function applyDeltasToStreamMessage(threadId: string, streamMessage: StreamMessage, existing: {
    streamId: string;
    cursor: number;
    messages: MessageDoc[];
} | undefined, deltas: StreamDelta[]): [{
    streamId: string;
    cursor: number;
    messages: MessageDoc[];
}, boolean];
export declare function createStreamingMessage(threadId: string, message: StreamMessage, part: TextStreamPart, index: number): MessageDoc;
//# sourceMappingURL=deltas.d.ts.map